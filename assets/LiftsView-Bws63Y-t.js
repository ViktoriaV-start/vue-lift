import{_ as x,u as M,r as I,a as k,w as E,o as N,b as h,c as R,d as S,t as G,e as _,U as j,D as V,F as Q,f as w,n as W,G as C,L as Y,g as z,h as D}from"./index-DeoxFHAx.js";const H=!1,J={__name:"LiftInGroup",props:["levels","liftId"],setup(b,{expose:a}){const u=M(),{levels:f,liftId:c}=b;let e=I({...u.value.getGroupLiftState(c)});a({addFloor:o,setParams:r,liftId:c,lift:e,saveQueueToLocalStorage:A,run:t});const s=k(null),d=k(null);let p=null;const l=[];let m=null,L=k(!0);function t(){const n=()=>{e.destination=l[0],e.currentFloor<l[0]?(e.progress=Math.abs(e.progress),e.movement=j):(e.progress=Math.abs(e.progress)*-1,e.movement=V),O(l[0])};e.isRun?L.value&&e.isRun&&(l.push(e.destination),L.value=!1,O(l[0])):(e.isRun=!0,L.value=!1,n())}function o(n){const i=()=>{l.push(n),t()};e.isRun?e.isRun&&i():i()}function r(){p=d.value,p.style.bottom=e.bottom+"px",p.style.left=(c-1)*100+(c-1)*20+1+"px",l.length&&e.isRun&&t()}const g=(n,i,F)=>{n>F?e.bottom=f[e.destination]:e.movement==="DOWN"?e.bottom=i-n/10:e.bottom=i+n/10,d.value.style.bottom=e.bottom+"px"},v=()=>new Promise(n=>{m=setTimeout(n,3e3)}).catch(n=>console.log(n)),O=n=>{e.currentFloor=n;let i=performance.now();const F=e.bottom,U=Math.abs(e.bottom-f[n])*10;s.value=requestAnimationFrame(function P(T){T<i&&(i=T-1);let q=T-i;if(e.bottom<-5||e.bottom>Object.values(f).at(-1)+5)throw new Error("КОСЯК!");if(s.value&&e.bottom!==f[n])p&&g(q,F,U),requestAnimationFrame(P);else if(s.value){cancelAnimationFrame(s.value),p.classList.add("blink"),s.value=null;let B=[...u.value.getLiftQueue(H)].filter($=>$!=n);A(B),l.shift(),v().then(()=>{e.isRun=!1,p.classList.remove("blink"),l.length&&t()})}})};E(e,()=>{u.value.setGroupLiftState({...e})});function A(n){const i=[];for(let F in n)i.push(n[F]);u.value.setGroupLiftQueue(i)}return N(()=>{clearTimeout(m)}),(n,i)=>(h(),R("div",{class:"lift",ref_key:"liftRef",ref:d},[S("div",null,G(_(e).isRun?_(e).destination:""),1),S("div",null,G(_(e).isRun?_(e).movement:""),1)],512))}},K=x(J,[["__scopeId","data-v-5a1e7b31"]]),X={class:"floor"},Z=["tube-number"],ee=!1,te={__name:"FloorInGroup",props:["el","add","liftsRange"],setup(b){const a=M(),{el:u,add:f,liftsRange:c}=b,e=k(u),s=()=>!!Object.values(a.value.groupLiftState).find(m=>m.destination===e.value),d=()=>{f(e.value)};return(p,l)=>(h(),R("div",X,[(h(!0),R(Q,null,w(b.liftsRange,m=>(h(),R("div",{key:m,"tube-number":m,class:"space"},null,8,Z))),128)),S("button",{class:W(["btn",_(a).getLiftQueue(ee).includes(e.value)?s()?"destination":"pressed":""]),type:"button",onClick:d},G(e.value),3)]))}},se=x(te,[["__scopeId","data-v-9f891408"]]);function ne(){const b=I([]),a=I({}),u=I([]),f=()=>{for(let s=C;s>0;s--)b.push(s)},c=()=>{for(let s=1;s<=C;s++)a[s]=s*100-100},e=()=>{for(let s=1;s<=Y;s++)u.push(s)};return f(),c(),e(),[b,a,u]}const oe={class:"lifts-container"},y=!1,le={__name:"LiftsView",setup(b){const a=M();a.value.checkGroupLocalStorage();const[u,f,c]=ne(),e=k([]);let s=null,d=I([]);const p=t=>{if(d.find(o=>o[1].lift.currentFloor===t))return!0},l=t=>{if(!a.value.getLiftQueue(y).includes(t)){let o=[...a.value.getLiftQueue(y)];o.push(t),d[0][1].saveQueueToLocalStorage(o)}},m=t=>{let o=d.filter(g=>!g[1].lift.isRun),r=[];return o.length&&(r=o.reduce((g,v)=>Math.abs(t-v[1].lift.currentFloor)-Math.abs(t-g[1].lift.currentFloor)===0&&!v[1].lift.isRun?v[1].lift.currentFloor>t?v:g:Math.abs(t-v[1].lift.currentFloor)-Math.abs(t-g[1].lift.currentFloor)>0&&!v[1].lift.isRun?g:v,o[0])),r},L=t=>{if(!p(t)){l(t);let r=m(t);r.length?r[1].addFloor(t):s=setTimeout(()=>L(t),500)}};return z(()=>{e.value.forEach(o=>{o.setParams(),o.lift.isRun&&o.run()}),d=Object.entries(e.value);let t=a.value.getLiftQueue(y);if(t.length)for(let o in t)L(t[o]);console.log("MOUNTED in App")}),N(()=>{clearTimeout(s)}),(t,o)=>(h(),R("section",oe,[(h(!0),R(Q,null,w(_(u),r=>(h(),D(se,{key:r,el:r,liftsRange:_(c),add:L},null,8,["el","liftsRange"]))),128)),(h(!0),R(Q,null,w(_(c),r=>(h(),D(K,{key:r,liftId:r,levels:_(f),ref_for:!0,ref_key:"liftComponentRef",ref:e},null,8,["liftId","levels"]))),128))]))}},ie=x(le,[["__scopeId","data-v-540dcc5e"]]);export{ie as default};
